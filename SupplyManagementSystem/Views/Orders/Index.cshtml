@using Kendo.Mvc.UI
@using SCM.Models
@using SCM.ViewModels.Order
@model IEnumerable<SCM.ViewModels.Order.OrderGridModel>

@{
    var clientId = (int?) ViewBag.ClientId;
    var clientName = (string)ViewBag.ClientName;
    var title = string.IsNullOrWhiteSpace(clientName) ? "Заказы" : $"Заказы клиента {clientName}";
    
    ViewBag.Title = title;
}

<h1>@title</h1>

<div class="container-fluid">
    <div class="row">
        @(Html.Kendo().Grid<OrderGridModel>().Resizable(c => c.Columns(true))
              .Name("grid")
              .Columns(columns =>
              {
                  columns.Bound(p => p.Title).Title("Заказ");
                  columns.Bound(p => p.FormatDate).Title("Дата заказа");
                  columns.Bound(p => p.ClientOrganization).Title("Организация клиента");
                  columns.Bound(p => p.IsFinishedAsString).Title("Статус");
                  columns.Bound(p => p.Id).Title("Действия")
                      .ClientTemplate(
                          "<a href='" + @Url.Action("Edit", "Orders", new {id = "#=Id#"}) + "' class='btn btn-xs'>  <i class='fa fa-pen'></i></a>" +
                           "<a href='" + @Url.Action("Delete", "Orders", new {id = "#=Id#"}) + "' class='btn btn-xs m-1'>  <i class='fa fa-trash'></i></a>"+
                           "<a href='" + @Url.Action("Details", "Orders", new {id = "#=Id#"}) + "' class='btn btn-xs m-1'>  <i class='fa fa-info-circle'></i></a>"
                               
                  );
              })
              .Pageable()
              .Groupable()
              .Sortable()
              .Scrollable(s => s.Enabled(true))
              .ToolBar(t =>
              {
                  t.Custom().Url(Url.Action("Create")).HtmlAttributes(new {@class = "float-right"}).Text("Добавить заказ");
                  t.Excel().Text("Экспортировать в Эксель");
              })
              .Excel(excel => excel
                  .FileName("Заказы.xlsx")
                  .Filterable(true)
                  .ProxyURL(Url.Action("ExportExcel", "Excel"))
              )
              .Filterable()
              .DataSource(dataSource => dataSource
                  .Ajax()
                  .PageSize(10)
                  //Метод должен быть в контроллере.
                  .Read(read => read.Action("OrdersRead", "Orders", new {clientId = clientId}))
              ))
    </div>
</div>
